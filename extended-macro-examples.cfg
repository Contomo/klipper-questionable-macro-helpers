# -> LIVE_TEST_JINJA NAME=TEST SET='RESPOND MSG="pos is: { printer.toolhead.position | join(", ") }"'
# -> LIVE_TEST_JINJA NAME=TEST
#
# -> pos is: 0.0, 0.0, 0.0, 0.0
#
[gcode_macro LIVE_TEST_JINJA]
description: Store Jinja snippets (templates) and execute them on demand
variable_templates: {} 
gcode:
    #---< require NAME=… >---------------------------------------------------
    {% if 'NAME' not in params %}
        { action_respond_info("Usage: LIVE_TEST_JINJA NAME=<id> SET=\"…\"or LIVE_TEST_JINJA NAME=<id>") }
    {% else %}
        {% set name = params.NAME %}

        #---< save / update template >--------------------------------------
        {% if 'SET' in params %}
            {% set _ = templates.update({name: params.SET}) %}
            SET_GCODE_VARIABLE MACRO=LIVE_TEST_JINJA VARIABLE=templates VALUE="{templates|tojson|replace('\\', '\\\\')|replace('"', '\\"')}"
            { action_respond_info("Template '" ~ name ~ "' saved (" ~ params.SET|length ~ " chars)") }

        #---< execute stored template >-------------------------------------
        {% elif name in templates %}
            {% set env      = printer.printer.lookup_object('gcode_macro').env %}
            {% set tpl      = env.from_string(templates[name]) %}
            {% set rendered = tpl.render(self._TemplateReference__context) %}
            {% set gcode_i  = printer.printer.lookup_object('gcode') %}
            {% set _        = gcode_i.run_script_from_command(rendered) %}
            { action_respond_info("Done") }

        #---< unknown name >-------------------------------------------------
        {% else %}
            { action_respond_info("No template stored as '" ~ name ~ "'.<br>Stored names: " ~ templates.keys()|join(', ')) }
        {% endif %}
    {% endif %}
